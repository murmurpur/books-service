name: Movie Service CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.1-alpine
        env:
          POSTGRES_USER: movie_db_username
          POSTGRES_PASSWORD: movie_db_password
          POSTGRES_DB: movie_db_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip install -r movie-service/requirements.txt

    - name: Test with pytest
      run: |
        # Add your commands to run tests, e.g., pytest
        echo "Run tests for the movie service"

    - name: Build and Push Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Build and push Docker image"
        # Add your commands to build and push the Docker image
        # e.g., docker build -t your-registry/your-image:${{ github.sha }} .
        # docker push your-registry/your-image:${{ github.sha }}

    - name: Deploy to Kubernetes
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploy to Kubernetes"
        # Add your commands to deploy to Kubernetes
        # e.g., kubectl apply -f deployment.yaml
