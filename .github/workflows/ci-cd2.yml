name: Order Service CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.1-alpine
        env:
          POSTGRES_USER: order_db_username
          POSTGRES_PASSWORD: order_db_password
          POSTGRES_DB: order_db_dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
  
      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r ./order-service/requirements.txt
  
      - name: Build and Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Log in to Docker Hub"
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "Build Docker image"
          docker build -t murmurpur/order-service:${{ github.sha }} ./order-service/
          echo "Push Docker image to Docker Hub"
          docker push murmurpur/order-service:${{ github.sha }}


  build-and-push-to-yc:
    name: Build and push to YandexCloud Registry
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to YC Registry
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Build and push to YC Registry
        run: |
          docker build -t cr.yandex/${{ secrets.YC_REGISTRY_ID }}/order-service:${{ github.run_number }} ./order-service/
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/order-service:${{ github.run_number }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push-to-yc
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/order-service:${{ github.run_number }}
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-env: |
            AMQP_URL=${{ secrets.ENV_AMQP_URL }}
            POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}
