name: Microservices CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'cast-service/**'
      - 'movie-service/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'cast-service/**'
      - 'movie-service/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [cast-service, movie-service]

    services:
      postgres:
        image: postgres:12.1-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip install -r ${{ matrix.service }}/requirements.txt

    - name: Test with pytest
      run: |
        echo "Run tests for ${{ matrix.service }}"
        # Add commands to run tests, e.g., pytest

    - name: Build Docker image
      if: github.ref == 'refs/heads/main'
      run: |
        docker build -t your-registry/${{ matrix.service }}:${{ github.sha }} -f ${{ matrix.service }}/Dockerfile ${{ matrix.service }}

    - name: Log in to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Push Docker image to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker push your-registry/${{ matrix.service }}:${{ github.sha }}
